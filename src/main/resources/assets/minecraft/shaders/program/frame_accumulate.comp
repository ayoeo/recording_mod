#version 430

layout(local_size_x = 32, local_size_y = 32) in;

layout(binding = 0, rgba8) uniform readonly image2D frame;

layout(binding = 1) buffer AccumBuffer { vec4 accum[]; };

layout(binding = 2, rgba8) uniform writeonly image2D out_frame;

// Determines whether or not we should clear the accumulation buffer with our write
uniform int firstFrame;

uniform float blendFactor;

vec3 color_at(uint x, uint y) {
  return imageLoad(frame, ivec2(x, y)).rgb;
}

void main() {
  ivec2 size = imageSize(frame);
  uint x = gl_GlobalInvocationID.x;
  uint y = gl_GlobalInvocationID.y;
  uint width = size.x;

  if (x >= width || y >= size.y) {
    return;
  }

  uint inv_y = size.y - y;
  if (firstFrame == 2){
    imageStore(out_frame, ivec2(x, y), accum[x + y * width] / blendFactor);
  } else if (firstFrame == 1) {
    accum[x + y * width] = vec4(color_at(x, y), 1);
  } else {
    accum[x + y * width] += vec4(color_at(x, y), 1);
  }
}
